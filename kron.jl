workspace()
using JOLI
jo_type_mismatch_error_set(false)
#JOLI.jo_type_mismatch_warn_set(false)

s=rand(3:9,3,2)
a=rand(Complex{Float64},s[1,:]...)
A=joMatrix(a;name="A")
show(A)
b=rand(Complex{Float64},s[2,:]...)
B=joMatrix(b;DDT=Complex{Float32},RDT=Complex{Float64},name="B")
show(B)
c=rand(Complex{Float64},s[3,:]...)
C=joMatrix(c;DDT=Complex{Float64},RDT=Complex{Float32},name="C")
show(C)
k=kron(a,b,c)
println(size(a),size(b),size(c),size(k))
K=joKron(A,B,C)
show(K)
show(K.')
show(K')
show(conj(K))
show(-K)
sn=prod(s[:,2])
sm=prod(s[:,1])
vn=rand(Complex{Float64},sn);
vm=rand(Complex{Float64},sm);
mvn=rand(Complex{Float64},sn,2);
mvm=rand(Complex{Float64},sm,2);
size(K)
println(norm(k*vn-K*vn)<eps(norm(k*vn))^(1./3.))
println(norm(k*mvn-K*mvn)<eps(norm(k*mvn))^(1./3.))
println(norm(k.'*vm-K.'*vm)<eps(norm(k.'*vm))^(1./3.))
println(norm(k.'*mvm-K.'*mvm)<eps(norm(k.'*mvm))^(1./3.))
println(norm(k'*vm-K'*vm)<eps(norm(k'*vm))^(1./3.))
println(norm(k'*mvm-K'*mvm)<eps(norm(k'*mvm))^(1./3.))
println(norm(conj(k)*vn-conj(K)*vn)<eps(norm(conj(k)*vn))^(1./3.))
println(norm(conj(k)*mvn-conj(K)*mvn)<eps(norm(conj(k)*mvn))^(1./3.))
println(norm((-k)*vn-(-K)*vn)<eps(norm((-k)*vn))^(1./3.))
println(norm((-k)*mvn-(-K)*mvn)<eps(norm((-k)*mvn))^(1./3.))
