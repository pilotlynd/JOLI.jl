workspace()
#using LinearOperators
using JOLI
a=rand(3,2)
println(a)
vn=rand(2)
println(vn)
vm=rand(3)
println(vm)
mvn=rand(2,2)
println(mvn)
mvm=rand(3,2)
println(mvm)
A=joLinearFunctionAll(3,2,
    v->a*v,v->a.'*v,v->a'*v,v->conj(a)*v,
    v->a\v,v->a.'\v,v->a'\v,v->conj(a)\v,
    Float64;fMVok=true)
show(A)
show(A.')
show(A')
show(A.'*A)
show(A*A.')
show(A*A')
show(A'*A)
show(A*A')
show(A+A)
show(+A)
#show(A+1)
#show(1+A)
show(-A)
#show(A-1)
#show(1-A)
show(A*2.)
show(2.0*A)
println(A*vn-a*vn)
println(A*mvn-a*mvn)
println(A.'*vm-a.'*vm)
println(A.'*mvm-a.'*mvm)
println(A'*vm-a'*vm)
println(A'*mvm-a'*mvm)
println((A.')'*vn-(a.')'*vn)
println((A.')'*mvn-(a.')'*mvn)
println((A').'*vn-(a').'*vn)
println((A').'*mvn-(a').'*mvn)
println(A\vm-a\vm)
println(A\mvm-a\mvm)
println(A.'\vn-a.'\vn)
println(A.'\mvn-a.'\mvn)
println(A'\vn-a'\vn)
println(A'\mvn-a'\mvn)
println((A.')'\vm-(a.')'\vm)
println((A.')'\mvm-(a.')'\mvm)
println((A').'\vm-(a').'\vm)
println((A').'\mvm-(a').'\mvm)
